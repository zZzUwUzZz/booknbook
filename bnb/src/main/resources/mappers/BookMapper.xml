<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.cjcs.bnb.dao.BookMapper">

    <!-- 킹효진 -->
    <select id="findAll" resultType="com.cjcs.bnb.dto.BookDto">
        SELECT * FROM BOOK
    </select>

    <select id="bookAllList" resultType="com.cjcs.bnb.dto.BookDto">
SELECT * FROM (
    SELECT B.*, ROW_NUMBER() OVER (ORDER BY B.B_ISBN) AS rn
    FROM (
        SELECT DISTINCT B_ISBN FROM BOOK
    ) A
    JOIN (
        SELECT * FROM (
            SELECT BOOK.*, ROW_NUMBER() OVER (PARTITION BY B_ISBN ORDER BY B_PRICE ASC) AS rnk
            FROM BOOK
        ) WHERE rnk = 1
    ) B ON A.B_ISBN = B.B_ISBN
)
WHERE rn BETWEEN #{start} AND #{end}
</select>

 
<select id="countTotalBooks" resultType="int">
  SELECT COUNT(DISTINCT B_ISBN) FROM BOOK
</select>

<select id="findByIsbn" resultType="com.cjcs.bnb.dto.BookDto">
  SELECT * FROM BOOK WHERE B_ISBN = #{B_ISBN}
</select>

<select id="findBookByIsbnAndSellerId" resultType="com.cjcs.bnb.dto.BookDto">
    SELECT B.*, CS.category_m_id, CS.category_s, CM.category_m, s_storename
    FROM B, S, CATEGORY_M CM, CATEGORY_S CS
    WHERE b_s_id = s_id AND b_category_s_id = category_s_id AND CS.category_m_id = CM.category_m_id AND
          B_ISBN = #{isbn} AND B_S_ID = #{sellerId}
</select>

 

<!-- 키워드에 해당하는 책의 총 개수를 조회 -->
<select id="countKeyword" resultType="int">
  SELECT COUNT(DISTINCT B_ISBN) FROM BOOK WHERE UPPER(B_TITLE) LIKE UPPER('%' || #{keyword} || '%')
</select>

<!-- 키워드에 해당하는 책들을 페이지네이션하여 조회 -->
<select id="findByKwPg" resultType="com.cjcs.bnb.dto.BookDto">
SELECT * FROM (
    SELECT B.*, ROW_NUMBER() OVER (ORDER BY B.B_ISBN) AS rn
    FROM (
        SELECT DISTINCT B_ISBN FROM BOOK
        WHERE UPPER(B_TITLE) LIKE UPPER('%' || #{keyword} || '%')
    ) A
    JOIN (
        SELECT * FROM (
            SELECT BOOK.*, ROW_NUMBER() OVER (PARTITION BY B_ISBN ORDER BY B_PRICE ASC) AS rnk
            FROM BOOK
        ) WHERE rnk = 1
    ) B ON A.B_ISBN = B.B_ISBN
) 
WHERE rn BETWEEN #{start} AND #{end}
</select>


<!-- 카테고리별 조회 -->
<!-- 중분류 카테고리 조회 -->
<select id="findBooksByMediumCategory" resultType="com.cjcs.bnb.dto.BookDto">
SELECT * FROM (
    SELECT B.*, ROW_NUMBER() OVER (ORDER BY B.B_ISBN) AS rn
    FROM (
        SELECT DISTINCT B_ISBN FROM BOOK
        WHERE b_category_s_id IN (
          SELECT category_s_id FROM Category_S WHERE category_m_id = #{category_m_id}
        )
    ) A
    JOIN (
        SELECT * FROM (
            SELECT BOOK.*, ROW_NUMBER() OVER (PARTITION BY B_ISBN ORDER BY B_PRICE ASC) AS rnk
            FROM BOOK
        ) WHERE rnk = 1
    ) B ON A.B_ISBN = B.B_ISBN
  ) 
  WHERE rn BETWEEN #{start} AND #{end}
</select>

<select id="countBooksByMediumCategory" resultType="int">
  SELECT COUNT(DISTINCT B_ISBN) FROM BOOK WHERE b_category_s_id IN (
    SELECT category_s_id FROM Category_S WHERE category_m_id = #{category_m_id}
  )
</select>

 <!-- 소분류 카테고리 -->
<select id="findBooksBySmallCategory" resultType="com.cjcs.bnb.dto.BookDto">
SELECT * FROM (
    SELECT B.*, ROW_NUMBER() OVER (ORDER BY B.B_ISBN) AS rn
    FROM (
        SELECT DISTINCT B_ISBN FROM BOOK
        WHERE b_category_s_id = #{category_s_id}
    ) A
    JOIN (
        SELECT * FROM (
            SELECT BOOK.*, ROW_NUMBER() OVER (PARTITION BY B_ISBN ORDER BY B_PRICE ASC) AS rnk
            FROM BOOK
        ) WHERE rnk = 1
    ) B ON A.B_ISBN = B.B_ISBN
  ) 
  WHERE rn BETWEEN #{start} AND #{end}
</select>

<select id="countBooksBySmallCategory" resultType="int">
  SELECT COUNT(DISTINCT B_ISBN) FROM BOOK WHERE b_category_s_id = #{category_s_id}
</select>




<!-- 예림 -->
    <!-- 판매자 페이지 - 등록된 도서 리스트 조회 -->
    <select id="searchSellerBookList" resultType="BookDto" parameterType="map">
    SELECT CATEGORY_S, B_TITLE, B_AUTHOR, B_SALESTOCK, B_RENTALSTOCK
    FROM BOOK
    INNER JOIN CATEGORY_S ON BOOK.B_CATEGORY_S_ID = CATEGORY_S.CATEGORY_S_ID
    WHERE B_S_ID = 'seller001'
    <!-- WHERE B_S_ID = #{s_id} -->
        <choose>
            <when test="filter == 'category'">
                AND UPPER(CATEGORY_S.CATEGORY_S) = UPPER(#{keyword})
            </when>
            <when test="filter == 'title'">
                AND UPPER(B_TITLE) LIKE '%' || UPPER(#{keyword}) || '%'
            </when>
            <when test="filter == 'author'">
                AND UPPER(B_AUTHOR) LIKE '%' || UPPER(#{keyword}) || '%'
            </when>
        </choose>
    </select>

    
</mapper>

 
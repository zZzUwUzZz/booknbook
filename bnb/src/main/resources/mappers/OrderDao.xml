<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cjcs.bnb.dao.OrderDao">

<!-- 킹효진 -->
<insert id="addToCart" parameterType="CartDto">
    INSERT INTO Cart (cart_c_id, cart_s_id, cart_b_isbn, cart_sort, cart_amount, cart_rentalperiod, cart_id)
    VALUES (#{cart_c_id}, #{cart_s_id}, #{cart_b_isbn}, #{cart_sort}, #{cart_amount}, #{cart_rentalperiod}, CART_SEQ.NEXTVAL)
</insert>
 
  <!-- 장바구니 구매 아이템 검색 -->
<select id="findPurCartItem" resultType="CartDto">
    SELECT * FROM cart 
    WHERE cart_c_id=#{cart_c_id} AND cart_b_isbn=#{cart_b_isbn} AND cart_s_id=#{cart_s_id} AND cart_sort='구매'
</select>

 <!-- 장바구니 구매 아이템 업데이트 -->
<update id="updateCartItem">
    UPDATE cart 
    SET cart_amount=#{cart_amount} 
    WHERE cart_c_id=#{cart_c_id} AND cart_b_isbn=#{cart_b_isbn} AND cart_s_id=#{cart_s_id} AND cart_sort='구매'
</update>


  <!-- 장바구니 대여 아이템 검색 -->
<select id="findRentCartItem" resultType="CartDto">
    SELECT * FROM cart 
    WHERE cart_c_id=#{cart_c_id} AND cart_b_isbn=#{cart_b_isbn} AND cart_s_id=#{cart_s_id} AND cart_sort='대여'
</select>

 


<!--유다,수희-->
    <select id="getCartByCId" parameterType="String" resultType="CartDto">
        <!--DB에 CART_ITEMS라는 뷰 미리 만들어놨음-->
        SELECT * FROM CART_ITEMS
        WHERE cart_c_id = #{c_id}
    </select>
    <select id="getCartByCartId" parameterType="Integer" resultType="CartDto">
        <!--DB에 CART_ITEMS라는 뷰 미리 만들어놨음-->
        SELECT * FROM CART_ITEMS
        WHERE cart_id = #{cart_id}
    </select>
    <select id="getPurchaseCartByCId" parameterType="String" resultType="CartDto">
        <!--DB에 CART_ITEMS라는 뷰 미리 만들어놨음-->
        SELECT * FROM CART_ITEMS
        WHERE cart_c_id = #{c_id} AND cart_sort ='구매'
    </select>
        <select id="getRentalCartByCId" parameterType="String" resultType="CartDto">
        <!--DB에 CART_ITEMS라는 뷰 미리 만들어놨음-->
        SELECT * FROM CART_ITEMS
        WHERE cart_c_id = #{c_id} AND cart_sort ='대여'
    </select>

    <delete id="deleteCartItem">
        DELETE FROM CART WHERE cart_id = #{cart_id}
    </delete>

    <update id="updateCartAmount">
        UPDATE CART SET cart_amount = #{cart_amount} WHERE cart_id = #{cart_id}
    </update>
    <update id="updateCartRentalPeriod">
        UPDATE CART SET cart_rentalperiod = #{cart_rentalperiod} WHERE cart_id = #{cart_id}
    </update>

    <insert id="addOrderSelectKey" parameterType="Map" useGeneratedKeys="true" keyProperty="o_id">
		<selectKey keyProperty="o_id" resultType="Integer" order="BEFORE">
			SELECT O_SEQ.NEXTVAL FROM DUAL 
		</selectKey>
        INSERT INTO O(o_id, o_c_id, o_date, o_delivery_sort, o_recip_addr, o_recip_name, o_recip_phone, o_total_pricerent, o_total_deliveryfee, o_total_payment)
        VALUES(#{o_id}, #{c_id}, DEFAULT, #{o_delivery_sort}, #{o_recip_addr}, #{o_recip_name}, #{o_recip_phone}, #{o_total_pricerent}, #{o_total_deliveryfee}, #{o_total_payment})
    </insert>


<!--수희-->
    <select id="getOrderListGroupByOId" parameterType="String" resultType="Map">
        <!-- Map객체에 넣을 때는 아래처럼 as "키이름" 지정해줘야 함 -->
        SELECT o_id as "o_id",
               o_date as "o_date",
               first_title as "first_title",
               COUNT(*)-1 as "book_sorts_minus_one",
               order_status as "order_status",
               o_delivery_sort as "o_delivery_sort"
        FROM (SELECT o_id,
                    o_date,
                    FIRST_VALUE(b_title) OVER(PARTITION BY o_id) AS first_title,
                    order_status,
                    o_delivery_sort
              FROM order_list
              WHERE o_c_id = #{c_id})
        GROUP BY o_id, o_date, first_title, order_status, o_delivery_sort
        ORDER BY o_date DESC
    </select>

    <select id="getOrderInfoByOId" parameterType="Integer" resultType="Map">
        SELECT o_id as "o_id",
               o_date as "o_date",
               o_delivery_sort as "o_delivery_sort",
               o_recip_addr as "o_recip_addr",
               o_recip_name as "o_recip_name",
               o_recip_phone as "o_recip_phone",
               o_total_pricerent as "o_total_pricerent",
               o_total_deliveryfee as "o_total_deliveryfee",
               o_total_payment as "o_total_payment"
        FROM O
        WHERE o_id = #{o_id}
    </select>

<!--예림-->
    <!-- 오늘 판매 수 카운트 -->
    <select id="getTodaySellCnt" resultType="int">
        select count(*)
        from order_list
        where to_char(o_date, 'yy/mm/dd') = '23/09/02' and order_sort = '구매' and s_id = 'seller003'
        <!-- where to_char(o_date, 'yy/mm/dd') = to_char(sysdate, 'yy/mm/dd') and order_sort = '구매' and s_id = #{s_id} -->
    </select>

    <!-- 오늘 대여 수 카운트 -->
    <select id="getTodayRentCnt" resultType="int">
        select count(*)
        from order_list
        where to_char(o_date, 'yy/mm/dd') = '23/09/02' and order_sort = '대여' and s_id = 'seller003'
        <!-- where to_char(o_date, 'yy/mm/dd') = to_char(sysdate, 'yy/mm/dd') and order_sort = '대여' and s_id = #{s_id} -->
    </select>

    <!-- 오늘 대여 예약 수 카운트 -->
    <select id="getTodayRentResCnt" parameterType="RentalReservationDto" resultType="Integer">
        select count(*)
        from Rental_Res
        where to_char(rr_reqdate, 'yy/mm/dd') = '23/09/03' and rr_s_id = 'seller002'
        <!-- where to_char(rr_reqdate, 'yy/mm/dd') = to_char(sysdate, 'yy/mm/dd') and rr_s_id = #{rr_s_id} -->
    </select>

    <!-- 오늘 배송 준비중 카운트 -->
    <select id="getTodayDeliveryPrepare" parameterType="SellerDto" resultType="Integer">
        SELECT count(*)
        from order_list
        where order_status_id = 2 and s_id = 'seller001'
        <!-- where order_status_id = 4 and deliverydate = sysdate and s_id = #{s_id} -->
    </select>

    <!-- 오늘 배송중 카운트 -->
    <select id="getTodayDeliverShip" parameterType="SellerDto" resultType="Integer">
        SELECT count(*)
        from order_list
        where order_status_id = 1 and s_id = 'seller003'
        <!-- where order_status_id = 6 and deliverydate = sysdate and s_id = #{s_id} -->
    </select>

    <!-- 오늘 배송 완료 카운트 -->
    <select id="getTodayDeliverComplete" parameterType="SellerDto" resultType="Integer">
        SELECT count(*)
        from order_list
        where order_status_id = 1 and s_id = 'seller002'
        <!-- where order_status_id = 7 and deliverydate = sysdate and s_id = #{s_id} -->
    </select>

    <!-- 한 달간 취소 요청 카운트 -->
    <select id="getMonthCancelRequest" parameterType="SellerDto" resultType="Integer">
        select count(*)
        from order_list
        where o_date between to_char(sysdate-30, 'yy/mm/dd') and to_char(sysdate, 'yy/mm/dd') and order_status_id = '2' and s_id = 'seller001'
        <!-- where o_date between to_char(sysdate-30, 'yy/mm/dd') and to_char(sysdate, 'yy/mm/dd') and order_status_id = '2' and s_id = #{s_id} -->
    </select>

    <!-- 한 달간 반품/교환 카운트 -->
    <select id="getMonthReturnRequest" parameterType="SellerDto" resultType="Integer">
        select count(*)
        from Ref_Exch
        where re_reqdate between to_char(sysdate-30, 'yy/mm/dd') and to_char(sysdate, 'yy/mm/dd') and re_s_id = 'seller001'
        <!-- where re_reqdate between to_char(sysdate-30, 'yy/mm/dd') and to_char(sysdate, 'yy/mm/dd') and re_s_id = #{s_id} -->
    </select>

    <!-- 정산 내역 -->
    
    <!-- 설정한 기간 내의 대여료 합계 -->
    <select id="CalculateRent" resultType="Integer">
        SELECT Book.b_rent
        FROM Book
        INNER JOIN Rental ON Rental.r_b_isbn = Book.b_isbn
        INNER JOIN Orders ON Orders.o_id = Rental.r_o_id
        WHERE Orders.o_date between to_date(#{Start_Date}, 'yy/mm/dd') and to_date(#{End_Date}, 'yy/mm/dd')
    </select>

    <!-- 설정한 기간 내의 연체료 합계 -->
    <select id="CalculateLate" resultType="Integer">
        SELECT r_latefee_total
        FROM Rental
        INNER JOIN Orders ON Orders.o_id = Rental.r_o_id
        WHERE Orders.o_date between to_date(#{Start_Date}, 'yy/mm/dd') and to_date(#{End_Date}, 'yy/mm/dd')
    </select>

    <!-- 설정한 기간 내의 판매 금액 합계 -->
    <select id="CalculateSell" resultType="Integer">
        SELECT Book.b_price * Purchase.p_amount
        FROM Book, Purchase
        INNER JOIN Orders ON Orders.o_id = Purchase.p_o_id
        WHERE Purchase.p_b_isbn = Book.b_isbn
        AND Orders.o_date between to_date(#{Start_Date}, 'yy/mm/dd') and to_date(#{End_Date}, 'yy/mm/dd')
    </select>

    <!-- 설정한 기간 내의 반품 금액 합계 -->
    <select id="CalculateReturn" resultType="Integer">
        SELECT Book.b_price * Ref_Exch.re_amount
        FROM Ref_Exch
        INNER JOIN Orders ON Orders.o_id = Ref_Exch.re_o_id
        INNER JOIN Book ON Ref_Exch.re_b_isbn = Book.b_isbn
        WHERE Ref_Exch.re_sort = '반품'
        AND Orders.o_date between to_date(#{Start_Date}, 'yy/mm/dd') and to_date(#{End_Date}, 'yy/mm/dd')
    </select>
    
    
    
</mapper>

